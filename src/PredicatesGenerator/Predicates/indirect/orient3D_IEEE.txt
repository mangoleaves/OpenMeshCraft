implicitPoint3D(p1:l1x,l1y,l1z,d1)
explicitPoint3D(a:ax,ay,az)
explicitPoint3D(b:bx,by,bz)
explicitPoint3D(c:cx,cy,cz)

errorDefinition(SSI,S,3:x;3;1024;2.886579864025407e-15;4.000000000000004;y;3;1024;2.886579864025407e-15;4.000000000000004;z;3;1024;2.886579864025407e-15;4.000000000000004;d;2;1024;8.881784197001253e-16;2.000000000000001)
errorDefinition(LPI,L,3:x;4;1024;1.221613955826318e-14;12.00000000000002;y;4;1024;1.221613955826318e-14;12.00000000000002;z;4;1024;1.221613955826318e-14;12.00000000000002;d;3;1024;4.886390771174922e-015;6.000000000000006)
errorDefinition(TPI,T,3:x;7;1024;2.931951556539587e-013;144.0000000000005;y;7;1024;2.931951556539587e-013;144.0000000000005;z;7;1024;2.931951556539587e-013;144.0000000000005;d;6;1024;8.706837334449009e-014;48.00000000000014)

dcx = d1 * cx
dcy = d1 * cy
dcz = d1 * cz
ix_cx = l1x - dcx
iy_cy = l1y - dcy
ax_cx = ax - cx
ay_cy = ay - cy
az_cz = az - cz
iz_cz = l1z - dcz
bx_cx = bx - cx
by_cy = by - cy
bz_cz = bz - cz
tmc_a = ix_cx * ay_cy
tmc_b = iy_cy * ax_cx
m01 = tmc_a - tmc_b
tmi_a = ix_cx * az_cz
tmi_b = iz_cz * ax_cx
m02 = tmi_a - tmi_b
tma_a = iy_cy * az_cz
tma_b = iz_cz * ay_cy
m12 = tma_a - tma_b
mt1 = m01 * bz_cz
mt2 = m02 * by_cy
mt3 = m12 * bx_cx
mtt = mt2 - mt1
m012 = mtt - mt3